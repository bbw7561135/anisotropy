#!/usr/bin/env python

import glob, os, sys
from math import ceil
sys.path.append('/home/fmcnally/ShowerLLH/useful/')
from getGoodRuns import fileCleaner

def maker(yyyymmdd, batchSize=20):

    yy = yyyymmdd[:4]
    md = yyyymmdd[4:]

    # Get list of files
    prefix = '/data/exp/IceCube/%s/filtered/level2a/' % (yy)
    files = glob.glob(prefix + md + '*/Level2a_*_IT.i3.bz2')
    gcdFiles = glob.glob(prefix + md + '*/Level2a_*_GCD.i3.bz2')
    files += gcdFiles
    files.sort()

    # Clean for good runs
    goodRunList='/home/fmcnally/ShowerLLH/useful/IC79_GoodRunList_v2pt9.txt'
    files = fileCleaner(goodRunList, files)

    #njobs = (len(files)/batchSize)/2    # run over half the files
    njobs = int(ceil(len(files)/float(batchSize)))

    cwd = os.getcwd()
    os.chdir('/home/fmcnally/ShowerLLH/npx4/')

    for i in range(njobs):
        try:
            fileList = files[batchSize*i:batchSize*(i+1)]
        except IndexError:
            fileList = files[batchSize*i:]

        if 'GCD' not in fileList[0]:
            st  = fileList[0].find('Run') + 3
            run = fileList[0][st:st+8]
            gcd = [i for i in gcdFiles if run in i][0]
            fileList.insert(0, gcd)
        if 'GCD' in fileList[-1]:
            fileList.remove(fileList[-1])

        # Name outfile
        outPrefix = '/net/user/fmcnally/ShowerLLH/IT73_data/files/'
        st = fileList[1].find('level2a/') + 8
        outFile = outPrefix + 'DataLLH_%s' % yyyymmdd
        for file in [fileList[1], fileList[-1]]:
            run_st  = file.find('Run') + 3
            part_st = file.find('Part') + 4
            run  = file[run_st:run_st+8]
            part = file[part_st:part_st+8]
            outFile += '_%s_%s' % (run, part)
        outFile += '.hdf5'
        print outFile

        fileList = ' '.join(fileList)
        ex  = '/net/user/fmcnally/offline/V04-05-00/build/env-shell.sh'
        ex += ' python %s/MakeLLHFiles.py %s %s' % (cwd, outFile, fileList)
        os.system('./submit_npx4.sh ' + ex)
        #os.system(ex)

    os.chdir(cwd)



if __name__ == "__main__":

    if len(sys.argv)!=2:
        print 'Usage: %s [yyyymmdd]' % sys.argv[0]

    yyyymmdd = sys.argv[1]
    batchSize = 40                          # ~ 1 hour per job
    maker(yyyymmdd, batchSize=batchSize)


